{"ast":null,"code":"import _classCallCheck from \"Z:\\\\frontweb\\\\react\\\\shagua\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:\\\\frontweb\\\\react\\\\shagua\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"Z:\\\\frontweb\\\\react\\\\shagua\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"Z:\\\\frontweb\\\\react\\\\shagua\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"Z:\\\\frontweb\\\\react\\\\shagua\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"Z:\\\\frontweb\\\\react\\\\shagua\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"Z:\\\\frontweb\\\\react\\\\shagua\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { createStore, combineReducers } from 'redux';\nimport { get } from 'axios'; //reducx中三个重要部分：action reducer state(store)\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 1\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'COUNT_ADD':\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    case 'COUNT_REDUCE':\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    list: [{\n      title: \"你好\"\n    }]\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOAD_POSTS':\n      return _objectSpread({}, state, {\n        list: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //通过combineReducers把多个reducer进行合并\n\n\nvar rootReducers = combineReducers({\n  counter: counterReducer,\n  post: postReducer\n});\nvar store = createStore(rootReducers); //创建一个storage\n\nconsole.log(store.getState()); //如果要改变一个reducer的值 需要使用dispatch派发一个action\n//action需要两个参数\n//  type      通过type区分是对state做什么样的操作\n//  payload   传递的数据\n\nstore.dispatch({\n  type: 'COUNT_ADD',\n  payload: {}\n});\nconsole.log(store.getState());\nstore.dispatch({\n  type: 'COUNT_REDUCE',\n  payload: {}\n});\nconsole.log(store.getState());\n\nvar getPostsRequest = function getPostsRequest() {\n  return get('https://jsonplaceholder.typicode.com/posts');\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"dhfgj\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["Z:\\frontweb\\react\\shagua\\src\\App.js"],"names":["React","Component","createStore","combineReducers","get","counterReducer","state","count","action","type","postReducer","list","title","payload","rootReducers","counter","post","store","console","log","getState","dispatch","getPostsRequest","App"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAqBC,eAArB,QAA4C,OAA5C;AACA,SAASC,GAAT,QAAoB,OAApB,C,CAEA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmC;AAAA,MAAzBC,KAAyB,uEAAjB;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAiB;AAAA,MAAPC,MAAO;;AACxD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AACE,+BACKH,KADL;AACWC,QAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAD7B;;AAGF,SAAK,cAAL;AACE,+BACKD,KADL;AACWC,QAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAD7B;;AAGF;AACE,aAAOD,KAAP;AAVJ;AAYD,CAbD;;AAeA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAA4C;AAAA,MAAnCJ,KAAmC,uEAA7B;AAACK,IAAAA,IAAI,EAAC,CAAC;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAD;AAAN,GAA6B;AAAA,MAAPJ,MAAO;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,+BACKH,KADL;AACWK,QAAAA,IAAI,EAACH,MAAM,CAACK;AADvB;;AAGF;AACE,aAAOP,KAAP;AANJ;AAQD,CATD,C,CAWA;;;AACA,IAAMQ,YAAY,GAAGX,eAAe,CAAC;AACnCY,EAAAA,OAAO,EAACV,cAD2B;AAEnCW,EAAAA,IAAI,EAACN;AAF8B,CAAD,CAApC;AAKA,IAAMO,KAAK,GAAGf,WAAW,CACvBY,YADuB,CAAzB,C,CAEC;;AAEDI,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ,E,CAEA;AACA;AACA;AACA;;AACAH,KAAK,CAACI,QAAN,CAAe;AACbZ,EAAAA,IAAI,EAAC,WADQ;AAEbI,EAAAA,OAAO,EAAC;AAFK,CAAf;AAIAK,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;AAEAH,KAAK,CAACI,QAAN,CAAe;AACbZ,EAAAA,IAAI,EAAC,cADQ;AAEbI,EAAAA,OAAO,EAAC;AAFK,CAAf;AAIAK,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;;AAGA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SAAOlB,GAAG,CAAC,4CAAD,CAAV;AACD,CAFD;;IAKMmB,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD;;;;EAPetB,S;;AAUlB,eAAesB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { createStore,combineReducers } from 'redux';\nimport { get } from 'axios';\n\n//reducx中三个重要部分：action reducer state(store)\nconst counterReducer = function (state = {count:1},action){\n  switch(action.type){\n    case 'COUNT_ADD':\n      return {\n        ...state,count:state.count+1\n      }\n    case 'COUNT_REDUCE':\n      return {\n        ...state,count:state.count-1\n      }\n    default:\n      return state\n  }\n}\n\nconst postReducer = function(state={list:[{title:\"你好\"}]},action){\n  switch(action.type){\n    case 'LOAD_POSTS':\n      return {\n        ...state,list:action.payload\n      }\n    default:\n      return state;\n  }\n}\n\n//通过combineReducers把多个reducer进行合并\nconst rootReducers = combineReducers({\n  counter:counterReducer,\n  post:postReducer\n})\n\nconst store = createStore(\n  rootReducers\n)//创建一个storage\n\nconsole.log(store.getState())\n\n//如果要改变一个reducer的值 需要使用dispatch派发一个action\n//action需要两个参数\n//  type      通过type区分是对state做什么样的操作\n//  payload   传递的数据\nstore.dispatch({\n  type:'COUNT_ADD',\n  payload:{}\n})\nconsole.log(store.getState())\n\nstore.dispatch({\n  type:'COUNT_REDUCE',\n  payload:{}\n})\nconsole.log(store.getState())\n\n\nconst getPostsRequest = () => {\n  return get('https://jsonplaceholder.typicode.com/posts')\n}\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      dhfgj\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}